var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useEffect, useState } from "react";
import NylasContext from "./nylas-context";
import Nylas from "@nylas/nylas-js";
const NylasProvider = (props) => {
    const { children } = props, nylasProps = __rest(props, ["children"]);
    const [client, setClient] = useState(new Nylas(nylasProps));
    const safeSetState = (state) => {
        if (client) {
            console.warn("Client already exists.");
            return;
        }
        setClient(state);
    };
    useEffect(() => {
        if (!nylasProps || !nylasProps.serverBaseUrl) {
            return;
        }
        safeSetState(new Nylas(nylasProps));
    }, [nylasProps]);
    return (React.createElement(NylasContext.Provider, { value: client }, children));
};
export default NylasProvider;
